class MedianFinder(object):

    def __init__(self):
        """
        Initialize two heaps:
        - max heap for the lower half
        - min heap for the upper half
        """
        self.low = []  
        self.high = [] 

    def addNum(self, num):
        """
        Add a number into the data structure
        :type num: int
        :rtype: None
        """
        
        heapq.heappush(self.low, -num)
        
        
        heapq.heappush(self.high, -heapq.heappop(self.low))
        
        
        if len(self.high) > len(self.low):
            heapq.heappush(self.low, -heapq.heappop(self.high))

    def findMedian(self):
        """
        Return the median of current elements
        :rtype: float
        """
        if len(self.low) > len(self.high):
            return float(-self.low[0])
        else:
            return (-self.low[0] + self.high[0]) / 2.0
